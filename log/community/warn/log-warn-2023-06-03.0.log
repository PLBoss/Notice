2023-06-03 13:45:43,484 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [ConsumerCoordinator.java:737] [Consumer clientId=consumer-2, groupId=test-consumer-group] Asynchronous auto-commit of offsets {comment-0=OffsetAndMetadata{offset=0, metadata=''}, like-0=OffsetAndMetadata{offset=1, metadata=''}, follow-0=OffsetAndMetadata{offset=0, metadata=''}} failed: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured max.poll.interval.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
2023-06-03 13:45:43,497 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [ConsumerCoordinator.java:759] [Consumer clientId=consumer-2, groupId=test-consumer-group] Synchronous auto-commit of offsets {comment-0=OffsetAndMetadata{offset=0, metadata=''}, like-0=OffsetAndMetadata{offset=1, metadata=''}, follow-0=OffsetAndMetadata{offset=0, metadata=''}} failed: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured max.poll.interval.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
2023-06-03 14:38:41,056 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [ConsumerCoordinator.java:737] [Consumer clientId=consumer-4, groupId=test-consumer-group] Asynchronous auto-commit of offsets {publish-0=OffsetAndMetadata{offset=0, metadata=''}} failed: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured max.poll.interval.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
2023-06-03 14:38:41,057 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [ConsumerCoordinator.java:759] [Consumer clientId=consumer-4, groupId=test-consumer-group] Synchronous auto-commit of offsets {publish-0=OffsetAndMetadata{offset=0, metadata=''}} failed: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured max.poll.interval.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
2023-06-03 14:38:41,059 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [ConsumerCoordinator.java:759] [Consumer clientId=consumer-2, groupId=test-consumer-group] Synchronous auto-commit of offsets {comment-0=OffsetAndMetadata{offset=0, metadata=''}, like-0=OffsetAndMetadata{offset=1, metadata=''}, follow-0=OffsetAndMetadata{offset=0, metadata=''}} failed: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured max.poll.interval.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
2023-06-03 14:38:59,509 WARN [HikariPool-1 housekeeper] c.z.h.p.HikariPool [HikariPool.java:766] HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h54m27s141ms800Âµs).
2023-06-03 15:26:49,730 WARN [http-nio-8080-exec-9] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver [AbstractHandlerExceptionResolver.java:198] Resolved [java.lang.NullPointerException]
2023-06-03 15:26:52,777 WARN [http-nio-8080-exec-6] c.z.h.p.PoolBase [PoolBase.java:176] HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@4ef0c0a5 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2023-06-03 15:26:52,781 WARN [http-nio-8080-exec-6] c.z.h.p.PoolBase [PoolBase.java:176] HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@22c99c44 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2023-06-03 15:26:52,783 WARN [http-nio-8080-exec-6] c.z.h.p.PoolBase [PoolBase.java:176] HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@6af49550 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2023-06-03 15:26:52,786 WARN [http-nio-8080-exec-6] c.z.h.p.PoolBase [PoolBase.java:176] HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@413d7409 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2023-06-03 15:26:52,788 WARN [http-nio-8080-exec-6] c.z.h.p.PoolBase [PoolBase.java:176] HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@33ce20e3 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2023-06-03 15:34:59,797 WARN [http-nio-8080-exec-10] c.z.h.p.PoolBase [PoolBase.java:176] HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@55b22910 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2023-06-03 15:34:59,800 WARN [http-nio-8080-exec-10] c.z.h.p.PoolBase [PoolBase.java:176] HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@573e87e8 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2023-06-03 15:34:59,803 WARN [http-nio-8080-exec-10] c.z.h.p.PoolBase [PoolBase.java:176] HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@2e41eae (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2023-06-03 15:34:59,804 WARN [http-nio-8080-exec-10] c.z.h.p.PoolBase [PoolBase.java:176] HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@465a5d4b (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2023-06-03 15:34:59,807 WARN [http-nio-8080-exec-10] c.z.h.p.PoolBase [PoolBase.java:176] HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@73865ea2 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2023-06-03 15:54:43,442 WARN [restartedMain] o.a.c.c.C.[.[.[/community] [DirectJDKLog.java:173] Cannot deserialize session attribute [SPRING_SECURITY_CONTEXT] for session [C84C7708D71B444F61264BE829AE17DE]
2023-06-03 16:02:30,247 WARN [http-nio-8080-exec-5] c.z.h.p.PoolBase [PoolBase.java:176] HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@5bbd2bce (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2023-06-03 16:02:30,251 WARN [http-nio-8080-exec-5] c.z.h.p.PoolBase [PoolBase.java:176] HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@9db42a7 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2023-06-03 16:02:30,253 WARN [http-nio-8080-exec-5] c.z.h.p.PoolBase [PoolBase.java:176] HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@3b8afb09 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2023-06-03 16:02:30,255 WARN [http-nio-8080-exec-5] c.z.h.p.PoolBase [PoolBase.java:176] HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@357d2e9b (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2023-06-03 16:02:30,256 WARN [http-nio-8080-exec-5] c.z.h.p.PoolBase [PoolBase.java:176] HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@4969061c (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2023-06-03 16:20:16,639 WARN [restartedMain] o.a.c.c.C.[.[.[/community] [DirectJDKLog.java:173] Cannot deserialize session attribute [SPRING_SECURITY_CONTEXT] for session [C84C7708D71B444F61264BE829AE17DE]
2023-06-03 16:22:43,385 WARN [restartedMain] o.a.c.c.C.[.[.[/community] [DirectJDKLog.java:173] Cannot deserialize session attribute [SPRING_SECURITY_CONTEXT] for session [129C985381685E46E4537FBB6A130E72]
2023-06-03 16:40:44,857 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [ConsumerCoordinator.java:737] [Consumer clientId=consumer-4, groupId=test-consumer-group] Asynchronous auto-commit of offsets {comment-0=OffsetAndMetadata{offset=0, metadata=''}, like-0=OffsetAndMetadata{offset=1, metadata=''}, follow-0=OffsetAndMetadata{offset=0, metadata=''}} failed: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured max.poll.interval.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
2023-06-03 16:40:44,857 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [ConsumerCoordinator.java:737] [Consumer clientId=consumer-2, groupId=test-consumer-group] Asynchronous auto-commit of offsets {publish-0=OffsetAndMetadata{offset=1, metadata=''}} failed: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured max.poll.interval.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
2023-06-03 16:40:44,859 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [ConsumerCoordinator.java:759] [Consumer clientId=consumer-2, groupId=test-consumer-group] Synchronous auto-commit of offsets {publish-0=OffsetAndMetadata{offset=1, metadata=''}} failed: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured max.poll.interval.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
2023-06-03 16:40:44,859 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [ConsumerCoordinator.java:759] [Consumer clientId=consumer-4, groupId=test-consumer-group] Synchronous auto-commit of offsets {comment-0=OffsetAndMetadata{offset=0, metadata=''}, like-0=OffsetAndMetadata{offset=1, metadata=''}, follow-0=OffsetAndMetadata{offset=0, metadata=''}} failed: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured max.poll.interval.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
2023-06-03 16:41:07,929 WARN [HikariPool-1 housekeeper] c.z.h.p.HikariPool [HikariPool.java:766] HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m45s558ms705Âµs800ns).
2023-06-03 17:05:51,730 WARN [http-nio-8080-exec-10] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver [AbstractHandlerExceptionResolver.java:198] Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: "profile.html"]
2023-06-03 17:06:03,233 WARN [http-nio-8080-exec-8] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver [AbstractHandlerExceptionResolver.java:198] Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: "profile.html"]
2023-06-03 17:06:24,595 WARN [http-nio-8080-exec-9] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver [AbstractHandlerExceptionResolver.java:198] Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: "profile.html"]
2023-06-03 17:06:43,826 WARN [http-nio-8080-exec-10] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver [AbstractHandlerExceptionResolver.java:198] Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: "profile.html"]
2023-06-03 17:08:06,600 WARN [http-nio-8080-exec-6] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver [AbstractHandlerExceptionResolver.java:198] Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: "profile.html"]
2023-06-03 17:10:54,434 WARN [http-nio-8080-exec-4] c.z.h.p.PoolBase [PoolBase.java:176] HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@5f0d5817 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2023-06-03 17:10:54,451 WARN [http-nio-8080-exec-4] c.z.h.p.PoolBase [PoolBase.java:176] HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@44c1ba77 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2023-06-03 17:10:54,456 WARN [http-nio-8080-exec-4] c.z.h.p.PoolBase [PoolBase.java:176] HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@71399f18 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2023-06-03 17:10:54,458 WARN [http-nio-8080-exec-4] c.z.h.p.PoolBase [PoolBase.java:176] HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@75206ef5 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2023-06-03 17:32:16,750 WARN [http-nio-8080-exec-9] c.z.h.p.PoolBase [PoolBase.java:176] HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@73ec148a (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2023-06-03 17:32:16,752 WARN [http-nio-8080-exec-9] c.z.h.p.PoolBase [PoolBase.java:176] HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@eeb4946 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2023-06-03 17:32:16,755 WARN [http-nio-8080-exec-9] c.z.h.p.PoolBase [PoolBase.java:176] HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@2db288d1 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2023-06-03 17:32:16,759 WARN [http-nio-8080-exec-9] c.z.h.p.PoolBase [PoolBase.java:176] HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@3ee981a9 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2023-06-03 17:32:16,762 WARN [http-nio-8080-exec-9] c.z.h.p.PoolBase [PoolBase.java:176] HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@36e256be (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2023-06-03 18:32:57,179 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [ConsumerCoordinator.java:737] [Consumer clientId=consumer-4, groupId=test-consumer-group] Asynchronous auto-commit of offsets {publish-0=OffsetAndMetadata{offset=1, metadata=''}} failed: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured max.poll.interval.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
2023-06-03 18:32:57,179 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [ConsumerCoordinator.java:737] [Consumer clientId=consumer-2, groupId=test-consumer-group] Asynchronous auto-commit of offsets {comment-0=OffsetAndMetadata{offset=0, metadata=''}, like-0=OffsetAndMetadata{offset=3, metadata=''}, follow-0=OffsetAndMetadata{offset=1, metadata=''}} failed: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured max.poll.interval.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
2023-06-03 18:32:57,192 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [ConsumerCoordinator.java:759] [Consumer clientId=consumer-2, groupId=test-consumer-group] Synchronous auto-commit of offsets {comment-0=OffsetAndMetadata{offset=0, metadata=''}, like-0=OffsetAndMetadata{offset=3, metadata=''}, follow-0=OffsetAndMetadata{offset=1, metadata=''}} failed: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured max.poll.interval.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
2023-06-03 18:32:57,192 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [ConsumerCoordinator.java:759] [Consumer clientId=consumer-4, groupId=test-consumer-group] Synchronous auto-commit of offsets {publish-0=OffsetAndMetadata{offset=1, metadata=''}} failed: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured max.poll.interval.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
2023-06-03 18:33:16,827 WARN [HikariPool-1 housekeeper] c.z.h.p.HikariPool [HikariPool.java:766] HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m22s299ms657Âµs700ns).
2023-06-03 18:54:47,671 WARN [HikariPool-1 housekeeper] c.z.h.p.HikariPool [HikariPool.java:766] HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m52s265ms379Âµs800ns).
2023-06-03 18:55:32,662 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [ConsumerCoordinator.java:737] [Consumer clientId=consumer-2, groupId=test-consumer-group] Asynchronous auto-commit of offsets {publish-0=OffsetAndMetadata{offset=1, metadata=''}} failed: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured max.poll.interval.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
2023-06-03 18:55:32,664 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [ConsumerCoordinator.java:759] [Consumer clientId=consumer-2, groupId=test-consumer-group] Synchronous auto-commit of offsets {publish-0=OffsetAndMetadata{offset=1, metadata=''}} failed: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured max.poll.interval.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
2023-06-03 18:55:32,771 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [ConsumerCoordinator.java:737] [Consumer clientId=consumer-4, groupId=test-consumer-group] Asynchronous auto-commit of offsets {comment-0=OffsetAndMetadata{offset=0, metadata=''}, like-0=OffsetAndMetadata{offset=4, metadata=''}, follow-0=OffsetAndMetadata{offset=1, metadata=''}} failed: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured max.poll.interval.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
2023-06-03 18:55:32,771 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [ConsumerCoordinator.java:759] [Consumer clientId=consumer-4, groupId=test-consumer-group] Synchronous auto-commit of offsets {comment-0=OffsetAndMetadata{offset=0, metadata=''}, like-0=OffsetAndMetadata{offset=4, metadata=''}, follow-0=OffsetAndMetadata{offset=1, metadata=''}} failed: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured max.poll.interval.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
2023-06-03 18:55:35,730 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.z.h.p.PoolBase [PoolBase.java:176] HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@76e28fe1 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2023-06-03 18:55:35,733 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.z.h.p.PoolBase [PoolBase.java:176] HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@749e01f8 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2023-06-03 18:55:35,736 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.z.h.p.PoolBase [PoolBase.java:176] HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@16e1150d (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2023-06-03 18:55:35,739 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.z.h.p.PoolBase [PoolBase.java:176] HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@5a81c4d1 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2023-06-03 18:55:35,741 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.z.h.p.PoolBase [PoolBase.java:176] HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@1caa56e0 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
